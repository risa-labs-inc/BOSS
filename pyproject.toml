[tool.poetry]
name = "boss"
version = "0.1.0"
description = "Business Operations System Solver - A framework for automating business operations through task resolvers"
authors = ["BOSS Contributors <info@example.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/your-org/BOSS"
keywords = ["automation", "workflow", "task", "ai", "operations"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = "^3.8"
pydantic = "^2.0.0"
asyncio = "^3.4.3"
aiohttp = "^3.8.4"
python-dotenv = "^1.0.0"

# Optional dependencies
anthropic = {version = "^0.8.0", optional = true}
openai = {version = "^1.0.0", optional = true}

[tool.poetry.dev-dependencies]
pytest = "^7.3.1"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.3.0"
isort = "^5.12.0"
mypy = "^1.3.0"
pylint = "^2.17.5"
pytest-mock = "^3.11.1"

[tool.poetry.extras]
anthropic = ["anthropic"]
openai = ["openai"]
all = ["anthropic", "openai"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
